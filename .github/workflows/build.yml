name: Build

on:
  release:
    types:
      - created

  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag'
        required: false
        default: latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Install the latest verion of zig with zvm and build
        run: |
          if ! ZIG_VERSION=$(git ls-remote --tags https://github.com/ziglang/zig | awk -F'/' '{print $NF}' | grep -E '^v?[0-9]+\.[0-9]+(\.[0-9]+)?$' | sed 's/^v//' | sort -V | tail -n 1); then
            echo "Failed to get the latest version of Zig"
            ZIG_VERSION=master
          fi
          echo "$ZIG_VERSION"

          if ! curl https://raw.githubusercontent.com/tristanisham/zvm/master/install.sh | bash; then
            echo "Failed to install ZVM"
            exit 1
          fi
          source /home/runner/.profile
          zvm --version

          if ! zvm i $ZIG_VERSION; then
            echo "Failed to install Zig"
            exit 1
          fi
          zig version

          zvm use $ZIG_VERSION
          zig build

      - name: Install Zip
        run: sudo apt-get install -y zip

      - name: Zip executables
        run: |
          for file in zig-out/*; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              if [ ${filename##*.} != ${filename} ]; then
                extension=".${filename##*.}"
                filename=${filename%.*}
              else
                extension=""
              fi
              mv "$file" "zig-out/workspace$extension"
              zip -m -j -v "zig-out/$filename.zip" "zig-out/workspace$extension"
            fi
          done

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4.6.1
        with:
          name: build
          path: zig-out

  release:
    needs: build
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: build
          path: zig-out

      - name: Get release tag name
        id: get_tag_name
        run: |
          if [ "${{ github.event_name }}" == 'release' ]; then
            TAG_NAME=${{ github.event.release.tag_name }}
          else
            if [ "${{ github.event.inputs.release_tag }}" == 'latest' ]; then
              TAG_NAME=$(git describe --tags --abbrev=0)
            else
              TAG_NAME=${{ github.event.inputs.release_tag }}
            fi
          fi
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Add assets to release
        run: |
          cd zig-out/
          ls -l
          gh release upload $TAG_NAME * --clobber
          echo "Release assets uploaded to ${{ github.repository }}/releases/tag/$TAG_NAME"
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Add release installation instructions
        run: |
          EXISTING_NOTES=$(gh release view $TAG_NAME --json body -q .body)
          INSTALL_NOTES="You can install the latest version (${TAG_NAME}) with the commands below:

          For **Linux**:
          \`\`\`bash
          curl -fsSL https://raw.githubusercontent.com/gaskam/workspace/refs/heads/main/install.sh | bash
          \`\`\`

          For **Windows PowerShell**:
          \`\`\`bash
          irm raw.githubusercontent.com/gaskam/workspace/refs/heads/main/install.ps1 | iex
          \`\`\`

          Or juste update it!
          \`\`\`bash
          workspace update
          \`\`\`

          $EXISTING_NOTES"
          gh release edit $TAG_NAME --notes "$INSTALL_NOTES"
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}